"use strict";const touch=()=>{class Panel{constructor(game){this.game=game,this.el=document.createElement("li"),this.el.classList.add("pressed"),this.el.addEventListener("click",()=>{this.check()})}getEl(){return this.el}activate(num){this.el.classList.remove("pressed"),this.el.textContent=num}check(){this.game.getCurrentNum()===parseInt(this.el.textContent,10)&&(this.el.classList.add("pressed"),this.game.addCurrentNum(),this.game.getCurrentNum()===this.game.getLevel()**2&&(new judge,this.game.judgepoint(),console.log(new judge),console.log(this.game.judgepoint()),clearTimeout(this.game.getTimeoutId())))}}class Board{constructor(game){this.game=game,this.panels=[];for(let i=0;i<this.game.getLevel()**2;i++)this.panels.push(new Panel(this.game));this.setup()}setup(){const board=document.getElementById("touch-board");this.panels.forEach(panel=>{board.appendChild(panel.getEl())})}activate(){const nums=[];for(let i=0;i<this.game.getLevel()**2;i++)nums.push(i);this.panels.forEach(panel=>{const num=nums.splice(Math.floor(Math.random()*nums.length),1)[0];panel.activate(num)})}}class Game{constructor(level){this.level=level,this.board=new Board(this),this.currentNum=void 0,this.startTime=void 0,this.timeoutId=void 0;const btn=document.getElementById("touch-btn");btn.addEventListener("click",()=>{this.start()}),this.setup()}setup(){const touch_area=document.getElementById("touch-area"),PANEL_WIDTH=50,BOARD_PADDING=10;touch_area.style.width=50*this.level+20+"px"}start(){void 0!==this.timeoutId&&clearTimeout(this.timeoutId),this.currentNum=0,this.board.activate(),this.startTime=Date.now(),this.runTimer()}runTimer(){const timer=document.getElementById("touch-timer");timer.textContent=((Date.now()-this.startTime)/1e3).toFixed(2),this.timeoutId=setTimeout(()=>{this.runTimer()},10)}addCurrentNum(){this.currentNum++}getCurrentNum(){return this.currentNum}getStartTime(){return this.startTime}getTimeoutId(){return this.timeoutId}getLevel(){return this.level}}class judge{constructor(time){this.time=time,this.startTime=this.time.start(),console.log(this.startTime),this.touchPoint=document.getElementById("touch_point"),this.touchPointBtn=document.getElementById("touch_point_btn")}setPoint(po){this.touchPoint.value=po}sendPoint(e){this.touchPointBtn.click(e)}judgepoint(){const spendTime=((Date.now()-this.startTime)/1e3).toFixed(2);spendTime<=30?1==changelevelElem.value?this.setPoint(100):2==changelevelElem.value?this.setPoint(300):3==changelevelElem.value?this.setPoint(800):4==changelevelElem.value?this.setPoint(1e3):this.setPoint(2e3):1==changelevelElem.value?this.setPoint(-300):2==changelevelElem.value?this.setPoint(-400):3==changelevelElem.value?this.setPoint(-500):4==changelevelElem.value?this.setPoint(-800):this.setPoint(-2e3),this.sendPoint()}}const changelevelElem=document.getElementById("changeLevel"),currentValueElem=document.getElementById("current-value");let randomNum=Math.floor(5*Math.random()+1);new Game(randomNum);const setCurrentValue=val=>{currentValueElem.innerText=val},rangeOnChange=e=>{setCurrentValue(e.target.value)};window.onload=()=>{changelevelElem.addEventListener("input",rangeOnChange),setCurrentValue(randomNum),changelevelElem.value=randomNum}};touch();